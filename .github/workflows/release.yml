name: CI to Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18' # Set this to the Go version you want to use

      - name: Build Binaries
        run: |
          # Here you would call a script or make targets to build your binaries
          # e.g., make build-all
          go build

      - name: Generate Release Version
        id: version
        run: echo "::set-output name=version::$(date +'%Y%m%d%H%M%S')"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      # Use a matrix to build for multiple OSes and architectures
      - name: Build Matrix
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'
        run: go build -o go-tify-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        strategy:
          matrix:
            include:
              - os: linux
                arch: amd64
                extension: ''
              - os: windows
                arch: amd64
                extension: '.exe'
              - os: darwin
                arch: amd64
                extension: ''
      # Upload artifacts
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./go-tify-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_name: go-tify-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}
          asset_content_type: application/octet-stream
