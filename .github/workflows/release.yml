name: CI to Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'

      - name: Build Binaries
        run: |
          # Here you would call a script or make targets to build your binaries
          # e.g., make build-all

      - name: Generate Release Version
        id: version
        run: echo "VERSION=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Build and upload assets
        run: |
          matrixos=('linux' 'windows' 'darwin')
          matrixarch=('amd64')
          for os in "${matrixos[@]}"; do
            for arch in "${matrixarch[@]}"; do
              extension=''
              if [ "$os" == "windows" ]; then
                extension='.exe'
              fi
              output="go-tify-${os}-${arch}${extension}"
              GOOS=$os GOARCH=$arch go build -o $output .
              zip $output.zip $output
              asset_path=./$output.zip
              asset_name=$(basename "$asset_path")

              curl \
                -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @"$asset_path" \
                "${{ steps.create_release.outputs.upload_url }}?name=${asset_name}"
            done
          done
